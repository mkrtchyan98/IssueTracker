scalar GraphQLDate

enum StatusType {
	New
	Assigned
	Fixed
	Closed

}


input IssueInputs {
	title: String!
	status: StatusType = New
	owner: String
	effort: Int
	due: GraphQLDate
}
input IssueUpdateInputs {
  title: String
  status: StatusType
  owner: String
  effort: Int
  due: GraphQLDate
  description: String
}

type Issue {
	_id: ID!
	id: Int!
	title: String!
	status: StatusType!
	owner: String
	effort: Int
	created: GraphQLDate!
	due: GraphQLDate
	description:String
}
type IssueCounts {
	owner: String!
	New: Int
	Assigned: Int
	Fixed: Int
	Closed: Int
 }
type IssueListWithPages {
	issues: [Issue!]!
	pages: Int
}

type Query {
	about: String!
	issueList(
    status: StatusType
    effortMin: Int
    effortMax: Int
    search: String
    page: Int = 1
    ): IssueListWithPages
    issueCounts(
    status: StatusType
    effortMin: Int
    effortMax: Int
    ): [IssueCounts!]!
	issue(id: Int!): Issue!
	count: Int!
}

type Mutation {
	setAboutMessage(message: String): String
	issueAdd(issue: IssueInputs!): Issue!
	issueUpdate(id: Int!, changes: IssueUpdateInputs!): Issue!
	issueDelete(id: Int!): Boolean!
	issueRestore(id: Int!): Boolean!
}


